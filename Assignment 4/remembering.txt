from servos import Servo 
from camera import Cam
import sensor
import machine
import time

servo = Servo()
servo.soft_reset()

thresholds = []
camera = Cam(threshoolds, gain=20)

stop_distance = 350
current_blob_idx = 0

def move_servos(l_speed, r_speed, duration=200):
    servo.set_speed(l_speed, r_speed)
    time.sleep_ms(duration)
    servo.set_speed(0,0)

while current_blob_idx < len(thresholds):
    img = sensor.snapshot()

    white_blob = img.find_blobs([], pixels_threshold=20000, area_threshold=20000)
    blobs = img.find_blobs(thresholds, pixels_threshold=150, area_threshold=150)

    colours = camera.get_blob_colours(blobs)
    print('Colours:', colours, 'Current blob idx:', cuurent_blob_idx, 'looking for:', pow(2,current_blob_idx))

    if pow(2,current_blob_idx) not in colours:
        print('searching')
        move_servos(0.1,0.1,150)
        if not white_blob:
            print('Turning away from edge')
            servo.set_differential_speed(0.05,1)
            time.sleep_ms(1000)
            servo.set_speed(0,0)
        continue

    print('Found Blob', current_blob_idx, threshold[current_blob_idx])
    target_blob = camera.get_biggest_blob(blobs)
    img.draw_rectangle(target_blob.rect()) # debugging

    bx, by = target_blob.cx(), target_blob.cy()
    offset = bx - camera.w_centre

    if abs(offset) > 75:
        # aligning
        turn_speed = 0.06 if offset < 0 else -0.06
        move_servos(turn_speed, turn_speed, 80)
    else:
        move_servos(0.1,0.1) # moving forward

    if by > stop_distance:
        move_servos(0.1,0.1,350)
        print('---BLOB FOUND---')
        time.sleep_ms(1000)
        current_blob_idx += 1